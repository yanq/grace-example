buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.5"
    }
}

apply plugin: "com.bertramlabs.asset-pipeline"
apply plugin: 'java'
apply plugin: 'groovy'
//apply plugin: 'application'

group 'xyz.itbang'
version '0.1'

sourceCompatibility = 1.8
//mainClassName = ""

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}

sourceSets {
    main {
        groovy {
            srcDir "grace-app/domains"
            srcDir "grace-app/controllers"
            srcDir "grace-app/interceptors"
            srcDir "grace-app/views"
            srcDir "grace-app/init"
        }
        resources {
            srcDir "grace-app/conf"
        }
    }
}

dependencies {
    compile project(':grace')
    compile 'org.codehaus.groovy:groovy-all:2.5.1'
    compile 'io.undertow:undertow-servlet:2.0.13.Final'
    compile 'org.thymeleaf:thymeleaf:3.0.9.RELEASE'
    
    //gorm
    compile "org.grails:grails-datastore-gorm-hibernate5:6.1.9.RELEASE"

    compile 'com.alibaba:druid:1.1.10'
    runtime "mysql:mysql-connector-java:5.1.38"

    runtime 'org.slf4j:slf4j-api:1.7.22'
    runtime 'ch.qos.logback:logback-classic:1.2.1'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

//相当于 grace 命令，接收命令并执行
task grace(type: JavaExec) {
    group 'grace'
    setStandardInput(System.in)
    classpath = sourceSets.main.runtimeClasspath
    main = 'grace.app.GraceMain'
}

//启动服务
task run(type: JavaExec) {
    group 'grace'
    classpath = sourceSets.main.runtimeClasspath
    main = 'grace.app.GraceMain'
    args 'run'
}

// 运行 grace 命令之前的准备，主要是编译和处理依赖
task prepare(type: Copy) {
    // dependsOn classes,assetCompile
    group 'grace'
    into "$buildDir/grace"
    from sourceSets.main.runtimeClasspath
}

assets {
    assetsPath = "grace-app/assets"
    // includes = []
    // excludes = ['**/*.less'] //Example Exclude GLOB pattern
    // from '/vendor/lib'
}
